/* Shared design-system CSS for dashboard widgets
   ------------------------------------------------
   Import this once (e.g. in src/main.tsx) to make the
   styles available to every widget package. Widgets can then
   request a visual variant by adding a string to the "style"
   prop (e.g. "glass", "solid", "warning", ...).
*/

:root {
  /* Color palette */
  --bg: #0b0c0f;
  --panel: #111317;
  --panel2: #14171c;
  --glass: rgba(255, 255, 255, 0.06);
  --border: rgba(255, 255, 255, 0.09);
  --text: #e7e7ea;
  --muted: #a2a3a8;
  --accent: #d42d2d;

  /* Status colors */
  --success: #45d47e;
  --warning: #ffa726;
  --error: #ef5350;
  --info: #42a5f5;
  --processing: #ab47bc;

  /* Shared grid metrics */
  --unit: 80; /* one grid cell width/height */
  --gap: 12px; /* spacing between cells/items */
  --radius: 16px; /* card border radius */
  --card-padding: 12px; /* internal card padding */
}

/* --------------------------------------------------
   Base primitives
-------------------------------------------------- */

/* Card (container) */
.card {
  background: var(--panel);
  border: 1px solid var(--border);
  border-radius: var(--radius);
  height: 100%;
  box-sizing: border-box;
  box-shadow: 0 8px 30px rgba(0, 0, 0, 0.25),
    inset 0 1px 0 rgba(255, 255, 255, 0.05);
  padding: var(--card-padding);
  overflow: hidden; /* Prevent content from spilling out */
  display: flex;
  flex-direction: column;
  color: var(--text);
  position: relative;
}

/* Variant flags  (use via <Card style="glass" /> etc.) */
.card.glass {
  background: linear-gradient(180deg, var(--glass), rgba(255, 255, 255, 0.03));
}

.card.solid {
  background: var(--panel2);
}

.card.warning {
  background: #401414;
  border-color: rgba(212, 45, 45, 0.4);
}

.card.success {
  background: #143d24;
  border-color: rgba(45, 212, 126, 0.4);
}

.card.info {
  background: #14223d;
  border-color: rgba(45, 135, 212, 0.4);
}

/* Status-based variants for order states */
.card.status-delivered {
  background: linear-gradient(135deg, #143d24, #0f2d1a);
  border-color: rgba(69, 212, 126, 0.3);
  box-shadow: 0 8px 30px rgba(0, 0, 0, 0.3),
    inset 0 1px 0 rgba(69, 212, 126, 0.1), 0 0 20px rgba(69, 212, 126, 0.1);
}

.card.status-processing {
  background: linear-gradient(135deg, #2d1a3d, #1f1229);
  border-color: rgba(171, 71, 188, 0.3);
  box-shadow: 0 8px 30px rgba(0, 0, 0, 0.3),
    inset 0 1px 0 rgba(171, 71, 188, 0.1), 0 0 20px rgba(171, 71, 188, 0.1);
}

.card.status-error {
  background: linear-gradient(135deg, #401414, #2d0f0f);
  border-color: rgba(239, 83, 80, 0.3);
  box-shadow: 0 8px 30px rgba(0, 0, 0, 0.3),
    inset 0 1px 0 rgba(239, 83, 80, 0.1), 0 0 20px rgba(239, 83, 80, 0.1);
}

/* Status indicators */
.status-indicator {
  position: absolute;
  top: 8px;
  right: 8px;
  width: 8px;
  height: 8px;
  border-radius: 50%;
  background: var(--muted);
}

.status-indicator.delivered {
  background: var(--success);
  box-shadow: 0 0 8px rgba(69, 212, 126, 0.5);
}

.status-indicator.processing {
  background: var(--processing);
  box-shadow: 0 0 8px rgba(171, 71, 188, 0.5);
  animation: pulse 2s infinite;
}

.status-indicator.error {
  background: var(--error);
  box-shadow: 0 0 8px rgba(239, 83, 80, 0.5);
}

@keyframes pulse {
  0%,
  100% {
    opacity: 1;
  }
  50% {
    opacity: 0.5;
  }
}

/* Quick accent on hover for interactive cards */
.card:hover {
  border-color: var(--accent);
}

/* --------------------------------------------------
   Size-based tweaks (match grid sizes 2×2, 4×2, 4×4)
-------------------------------------------------- */
.widget-2x2 .card {
  min-height: 120px;
  padding: 8px;
  font-size: 12px;
}

.widget-4x2 .card {
  min-height: 120px;
  padding: 12px;
  font-size: 13px;
}

.widget-4x4 .card {
  min-height: 240px;
  padding: 16px;
  font-size: 14px;
}

/* --------------------------------------------------
   Layout primitives (Row, Column, Spacer, Text)
-------------------------------------------------- */
.widget-content {
  flex: 1;
  display: flex;
  flex-direction: column;
  overflow: hidden;
  min-height: 0; /* Allow flex shrinking */
}

/* Text */
.widget-text {
  line-height: 1.3;
  word-wrap: break-word;
  overflow-wrap: break-word;
  hyphens: auto;
}

.widget-text.largeTitle {
  font-size: 1.8em;
  font-weight: 700;
  line-height: 1.1;
}

.widget-text.title1 {
  font-size: 1.4em;
  font-weight: 600;
  line-height: 1.2;
}

.widget-text.caption {
  font-size: 0.85em;
  opacity: 0.8;
  line-height: 1.4;
}

/* Status-specific text colors */
.status-delivered .widget-text.largeTitle {
  color: var(--success);
}

.status-processing .widget-text.largeTitle {
  color: var(--processing);
}

.status-error .widget-text.largeTitle {
  color: var(--error);
}

/* Row & Column */
.widget-row {
  display: flex;
  align-items: center;
  gap: 8px;
  min-height: 0;
  flex-shrink: 0;
}

.widget-column {
  display: flex;
  flex-direction: column;
  gap: 8px;
  min-height: 0;
  flex: 1;
}

.widget-spacer {
  flex: 1;
  min-width: 0;
}

/* Logo/brand styling */
.brand-logo {
  width: 48px;
  height: 48px;
  opacity: 1;
  filter: brightness(1);
}

.widget-2x2 .brand-logo {
  width: 32px;
  height: 32px;
}

.widget-4x4 .brand-logo {
  width: 64px;
  height: 64px;
}

/* --------------------------------------------------
   Utility / content-type wrappers for future widgets
-------------------------------------------------- */

/* Table */
.table-container {
  width: 100%;
  overflow-x: auto;
  font-size: 0.85em;
}

/* Media player */
.media-player {
  flex: 1;
  display: flex;
  align-items: center;
  justify-content: center;
  background: black;
  border-radius: var(--radius);
}

/* Chart container */
.chart-container {
  position: relative;
  flex: 1;
}
